// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tourfirm.Domain.data;

#nullable disable

namespace Tourfirm.Domain.Migrations
{
    [DbContext(typeof(TourfirmContext))]
    partial class TourfirmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tourfirm.Domain.models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOrdered")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerOne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Турция"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Египет"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Грузия"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Израиль"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Таиланд"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Вьетнам"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Абхазия"
                        });
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Stars = 5,
                            Title = "Temiz"
                        },
                        new
                        {
                            Id = 2,
                            Stars = 3,
                            Title = "Park Avrupa Hotel"
                        },
                        new
                        {
                            Id = 3,
                            Stars = 4,
                            Title = "Green Life"
                        },
                        new
                        {
                            Id = 4,
                            Stars = 5,
                            Title = "Fortuna Alanya"
                        },
                        new
                        {
                            Id = 5,
                            Stars = 5,
                            Title = "Nergos Side"
                        },
                        new
                        {
                            Id = 6,
                            Stars = 5,
                            Title = "Ares Dream"
                        },
                        new
                        {
                            Id = 7,
                            Stars = 5,
                            Title = "Park Marina"
                        });
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableCount")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("HotelId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableCount = 50,
                            CountryId = 1,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4751),
                            HotelId = 1,
                            Image = "",
                            Price = 60000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4738),
                            Title = "Турция"
                        },
                        new
                        {
                            Id = 2,
                            AvailableCount = 50,
                            CountryId = 2,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4756),
                            HotelId = 2,
                            Image = "",
                            Price = 70000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4756),
                            Title = "Египет"
                        },
                        new
                        {
                            Id = 3,
                            AvailableCount = 50,
                            CountryId = 3,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4758),
                            HotelId = 3,
                            Image = "",
                            Price = 65000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4758),
                            Title = "Грузия"
                        },
                        new
                        {
                            Id = 4,
                            AvailableCount = 50,
                            CountryId = 4,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4760),
                            HotelId = 4,
                            Image = "",
                            Price = 85000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4759),
                            Title = "Израиль"
                        },
                        new
                        {
                            Id = 5,
                            AvailableCount = 50,
                            CountryId = 5,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4761),
                            HotelId = 5,
                            Image = "",
                            Price = 105000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4760),
                            Title = "Таиланд"
                        },
                        new
                        {
                            Id = 6,
                            AvailableCount = 50,
                            CountryId = 6,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4762),
                            HotelId = 6,
                            Image = "",
                            Price = 95000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4762),
                            Title = "Вьетнам"
                        },
                        new
                        {
                            Id = 7,
                            AvailableCount = 50,
                            CountryId = 7,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4763),
                            HotelId = 7,
                            Image = "",
                            Price = 45000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4763),
                            Title = "Абхазия"
                        },
                        new
                        {
                            Id = 8,
                            AvailableCount = 50,
                            CountryId = 1,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4764),
                            HotelId = 1,
                            Image = "",
                            Price = 75000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4764),
                            Title = "Турция"
                        },
                        new
                        {
                            Id = 9,
                            AvailableCount = 50,
                            CountryId = 2,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4765),
                            HotelId = 2,
                            Image = "",
                            Price = 90000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4765),
                            Title = "Египет"
                        },
                        new
                        {
                            Id = 10,
                            AvailableCount = 50,
                            CountryId = 1,
                            Description = "",
                            EndDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4766),
                            HotelId = 1,
                            Image = "",
                            Price = 65000m,
                            StartDate = new DateTime(2023, 5, 19, 21, 26, 21, 213, DateTimeKind.Local).AddTicks(4766),
                            Title = "Турция"
                        });
                });

            modelBuilder.Entity("Tourfirm.Domain.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.CartItem", b =>
                {
                    b.HasOne("Tourfirm.Domain.models.Cart", null)
                        .WithMany("CartItems")
                        .HasForeignKey("CartId");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Tour", b =>
                {
                    b.HasOne("Tourfirm.Domain.models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tourfirm.Domain.models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Tourfirm.Domain.models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
